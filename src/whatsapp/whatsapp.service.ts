/* eslint-disable @typescript-eslint/no-unsafe-return */
/* eslint-disable @typescript-eslint/no-misused-promises */
/* eslint-disable @typescript-eslint/no-unsafe-call */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
import { Injectable, Logger, OnModuleDestroy } from '@nestjs/common';
import { Client as WhatsAppClient, LocalAuth, Message } from 'whatsapp-web.js';
import * as qrcode from 'qrcode';
import { ReplaySubject, Observable } from 'rxjs';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è WhatsApp –∫–ª–∏–µ–Ω—Ç–æ–º.
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é —á–µ—Ä–µ–∑ —ç–Ω–¥–ø–æ–∏–Ω—Ç, –∞ –Ω–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 * –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∏–µ–Ω—Ç–∞.
 */
@Injectable()
export class WhatsAppService implements OnModuleDestroy {
  private client: WhatsAppClient | null = null;
  private readonly logger = new Logger(WhatsAppService.name);
  private eventsStream = new ReplaySubject<any>(1);

  // –§–ª–∞–≥–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  private isInitializing = false;
  private isReady = false;
  private readonly instanceId: string; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞

  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–µ—Ä–≤–∏—Å–∞. –û—Å—Ç–∞–≤–ª–µ–Ω –ø—É—Å—Ç—ã–º, —Ç–∞–∫ –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é.
   */
  constructor() {
    this.instanceId = Math.random().toString(36).substring(7);
    this.logger.log(
      `[ID: ${this.instanceId}] WhatsAppService —Å–æ–∑–¥–∞–Ω –≤ –ø–∞—Å—Å–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.`,
    );
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é WhatsApp –∫–ª–∏–µ–Ω—Ç–∞.
   * –ú–µ—Ç–æ–¥ –∑–∞—â–∏—â–µ–Ω –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤, –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω.
   * @throws {Error} –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
   */
  async initAuth(): Promise<void> {
    // üõ°Ô∏è –ì–ª–∞–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –¥–≤–æ–π–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    if (this.isReady || this.isInitializing) {
      this.logger.log(
        `[ID: ${this.instanceId}] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω.`,
      );
      return;
    }

    try {
      this.isInitializing = true;
      this.logger.log(
        `[ID: ${this.instanceId}] üöÄ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WhatsApp –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É...`,
      );

      this.client = new WhatsAppClient({
        authStrategy: new LocalAuth(),
        puppeteer: {
          headless: true, // –ü–æ–º–µ–Ω—è–π—Ç–µ –Ω–∞ false –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏
          args: ['--no-sandbox', '--disable-setuid-sandbox'],
        },
      });

      this.setupEventHandlers();

      await this.client.initialize();
    } catch (err) {
      this.logger.error(
        `[ID: ${this.instanceId}] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏`,
        err,
      );
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –≤ —Å–ª—É—á–∞–µ –ø–æ–ª–Ω–æ–π –Ω–µ—É–¥–∞—á–∏
      this.isInitializing = false;
      this.isReady = false;
      // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤—ã—à–µ, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –º–æ–≥ –µ–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
      throw err;
    }
  }

  /**
   * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ WhatsApp.
   */
  private setupEventHandlers(): void {
    if (!this.client) return;

    this.client.on('qr', async (qr: string) => {
      try {
        const qrImage = await qrcode.toDataURL(qr);
        this.logger.log(
          `[ID: ${this.instanceId}] üì≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω QR-–∫–æ–¥. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –ø–æ—Ç–æ–∫ SSE...`,
        );
        this.eventsStream.next({ type: 'qr', data: qrImage });
        qrcode.generate(qr, { small: true }); // –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
      } catch (qrErr) {
        this.logger.error(
          `[ID: ${this.instanceId}] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥`,
          qrErr,
        );
      }
    });

    this.client.on('ready', () => {
      this.logger.log(
        `[ID: ${this.instanceId}] üîå –ö–ª–∏–µ–Ω—Ç WhatsApp –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!`,
      );
      this.isReady = true;
      this.isInitializing = false; // –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
      this.eventsStream.next({ type: 'ready' });
    });

    this.client.on('authenticated', () => {
      this.logger.log(`[ID: ${this.instanceId}] ‚úÖ WhatsApp –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω`);
      this.eventsStream.next({ type: 'authenticated' });
    });

    this.client.on('auth_failure', (msg) => {
      this.logger.error(
        `[ID: ${this.instanceId}] ‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ` + msg,
      );
      this.isInitializing = false; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞
      this.isReady = false;
      this.eventsStream.next({ type: 'auth_failure', data: msg });
    });

    this.client.on('disconnected', (reason) => {
      this.logger.warn(
        `[ID: ${this.instanceId}] üîå WhatsApp –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω: ` + reason,
      );
      this.isReady = false;
      // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é —Å–∞–º–∞.
      // –ù–µ –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å initAuth() –ø–æ–≤—Ç–æ—Ä–Ω–æ.
      this.eventsStream.next({ type: 'disconnected', data: reason });
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä.
   * @param phone - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <number>@c.us –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ <number>.
   * @param message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
   * @throws {Error} –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ.
   */
  async sendMessage(phone: string, message: string): Promise<Message> {
    this.ensureReady(); // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ—Ç–æ–≤ –ª–∏ –∫–ª–∏–µ–Ω—Ç

    const chatId = phone.includes('@') ? phone : `${phone}@c.us`;
    this.logger.log(`[ID: ${this.instanceId}] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ ${chatId}`);
    try {
      const sentMessage = await this.client!.sendMessage(chatId, message);
      return sentMessage;
    } catch (error) {
      this.logger.error(
        `[ID: ${this.instanceId}] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ ${chatId}`,
        error,
      );
      throw error;
    }
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Observable –¥–ª—è Server-Sent Events (SSE).
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ QR-–∫–æ–¥–∞ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥.
   */
  getQrStream(): Observable<any> {
    return this.eventsStream.asObservable();
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
   */
  getStatus() {
    return {
      instanceId: this.instanceId,
      isReady: this.isReady,
      isInitializing: this.isInitializing,
    };
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ WhatsApp.
   * @returns {object | null} - –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–ª–∏ null, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –≥–æ—Ç–æ–≤.
   */
  getInfo() {
    this.ensureReady();
    return (this.client as any)?.info ?? null;
  }

  /**
   * –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –¥–µ–π—Å—Ç–≤–∏–π.
   * @throws {Error} –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ –≥–æ—Ç–æ–≤.
   */
  private ensureReady(): void {
    if (!this.isReady || !this.client) {
      this.logger.warn(
        `[ID: ${this.instanceId}] –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞. isReady: ${this.isReady}, client exists: ${!!this.client}`,
      );
      throw new Error(
        '–ö–ª–∏–µ–Ω—Ç WhatsApp –Ω–µ –≥–æ—Ç–æ–≤. –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑–æ–≤–∏—Ç–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç /auth.',
      );
    }
  }

  /**
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è NestJS –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤.
   */
  onModuleDestroy() {
    this.logger.log(
      `[ID: ${this.instanceId}] –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã WhatsApp –∫–ª–∏–µ–Ω—Ç–∞...`,
    );
    this.client
      ?.destroy()
      .catch((err) => this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞', err));
    this.eventsStream.complete();
  }
}
